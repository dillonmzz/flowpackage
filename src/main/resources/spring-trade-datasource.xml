<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
					
    <!-- 数据源配置, 使用 Druid 数据库连接池 -->
    <bean id="tradeDataSource" class="com.alibaba.druid.pool.DruidDataSource" 
          init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${trade.jdbc.url}" />
        <property name="username" value="${trade.jdbc.username}" />
        <property name="password" value="${trade.jdbc.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="1" />
        <!-- 配置获取连接等待超时的时间   修改为10秒钟-->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,log4j2" />
    </bean>
    
    <!-- MyBatis SqlSessionFactoryBean -->
    <bean id="tradeSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="tradeDataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:com/bupt/flowpackage/mybatis/trade/**/mapping/*Mapper.xml"/>
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bupt.flowpackage.mybatis.trade"/>
        <property name="annotationClass" value="com.bupt.flowpackage.common.annotation.MyBatisRepository"/>
        <property name="sqlSessionFactoryBeanName" value="tradeSqlSessionFactory" />
    </bean>

	<bean id="tradeTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="tradeDataSource" />
		<qualifier value="trade" />
	</bean>
    
	<!-- 支持通过注解添加事务 -->
	<tx:annotation-driven proxy-target-class="true"	transaction-manager="tradeTxManager" />
    
</beans>